{"version":3,"file":"static/js/254.3cd6fe55.chunk.js","mappings":"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","sources":["services/moviesAPI.js","components/Movies/GenrePanel/GenrePanel.styled.js","components/Movies/GenrePanel/GenrePanel.jsx","components/Movies/Trending/Trending.jsx","components/Movies/TopRated/TopRated.jsx","components/Movies/Popular/Popular.jsx","components/Movies/NowPlaying/NowPlaying.jsx","components/NoFoundedTemplate/NoFoundedTemplate.styled.js","components/NoFoundedTemplate/NoFoundedTemplate.jsx","components/SearchingResults/SearchingResults.jsx","components/SearchMovie/SearchMovie.styled.js","components/SearchMovie/SearchMovie.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c7dd7652c2a2bbf7bac5e128508653f3';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = API_BASE_URL;\n\n// Movie: trending https://api.themoviedb.org/3   /trending/movie/day   ?language=en-US\n// Genres:         https://api.themoviedb.org/3   /genre/movie/list\n// Search by name: https://api.themoviedb.org/3   /search/movie         ?query=iron&include_adult=false&language=en-US&page=1\n// Top Rated:      https://api.themoviedb.org/3   /movie/top_rated\n// Popular:        https://api.themoviedb.org/3   /movie/popular\n// Now Playing:    https://api.themoviedb.org/3   /movie/now_playing\n// movieByGenre    https://api.themoviedb.org/3   /discover/movie       ?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc&with_genres=28\n\nconst MOVIES_API = {\n  trending: '/trending/movie/day',\n  genres: '/genre/movie/list',\n  movieByGenre: '/discover/movie',\n  moviesSearch: '/search/movie',\n  topRated: '/movie/top_rated',\n  popular: '/movie/popular',\n  nowPlaying: '/movie/now_playing',\n};\n\nexport const getTrendingMoviesList = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.trending, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getGenres = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.genres, {\n      params: { api_key: API_KEY },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getTopRated = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.topRated, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getPopular = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.popular, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getNowPlaying = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.nowPlaying, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMoviesSearch = async (query, page) => {\n  try {\n    const result = await axios.get(MOVIES_API.moviesSearch, {\n      params: { query, api_key: API_KEY, language: 'en-US', page },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMoviesByGenre = async genre => {\n  try {\n    const result = await axios.get(MOVIES_API.movieByGenre, {\n      params: {\n        include_adult: false,\n        api_key: API_KEY,\n        include_video: false,\n        language: 'en-US',\n        page: 1,\n        sort_by: 'popularity.desc',\n        with_genres: { genre },\n      },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const GenreList = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  padding: 10px;\n  justify-content: center;\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.2);\n`;\n\nexport const GenreName = styled.p`\n  font-size: 12px;\n  color: #8f938f;\n`;\n","import { useState, useEffect } from 'react';\nimport { getGenres } from 'services/moviesAPI';\nimport { GenreList, GenreName } from './GenrePanel.styled';\nimport { toast } from 'react-toastify';\n\nfunction GenrePanel() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [array, setArray] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getGenres()\n      .then(({ genres }) => {\n        setArray(genres);\n      })\n      .catch(err => {\n        setError(true);\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (error) {\n    toast.error('Sorry for the inconvenience! Try again later.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n\n  if (loading) {\n    return (\n      <>\n        <p>Loading...</p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <GenreList>\n        {array.map(genre => (\n          <GenreName key={genre.id}>{genre.name}</GenreName>\n        ))}\n      </GenreList>\n    </>\n  );\n}\nexport default GenrePanel;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMoviesList } from 'services/moviesAPI';\nimport Card from 'components/Card/Card';\nimport ListTemplate from 'components/ListTemplate/ListTemplate';\nimport TitleTemplate from 'components/TitleTemplate/TitleTemplate';\nimport Loading from 'components/Loading/Loading';\nimport { toast } from 'react-toastify';\n\nfunction Trending() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [trendingArray, setTrendingArray] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTrendingMoviesList()\n      .then(({ results }) => {\n        setTrendingArray(results);\n      })\n      .catch(err => {\n        setError(true);\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (error) {\n    toast.error('Sorry for the inconvenience! Try again later.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n\n  if (loading) {\n    return (\n      <>\n        <TitleTemplate>Trending list...</TitleTemplate>\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <TitleTemplate>Trending list</TitleTemplate>\n      <ListTemplate>\n        {trendingArray.map(movie => (\n          <Card\n            key={movie.id}\n            movieId={movie.id}\n            title={movie.title || movie.name}\n            poster={movie['poster_path']}\n            type={movie['media_type']}\n            rating={movie['vote_average']}\n            date={movie['release_date']}\n          />\n        ))}\n      </ListTemplate>\n    </div>\n  );\n}\nexport default Trending;\n","import { useState, useEffect } from 'react';\nimport { getTopRated } from 'services/moviesAPI';\nimport Card from 'components/Card/Card';\nimport ListTemplate from 'components/ListTemplate/ListTemplate';\nimport TitleTemplate from 'components/TitleTemplate/TitleTemplate';\nimport Loading from 'components/Loading/Loading';\nimport { toast } from 'react-toastify';\n\nfunction TopRated() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [array, setArray] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTopRated()\n      .then(({ results }) => {\n        setArray(results);\n      })\n      .catch(err => {\n        setError(true);\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (error) {\n    toast.error('Sorry for the inconvenience! Try again later.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n\n  if (loading) {\n    return (\n      <>\n        <TitleTemplate>Top Rated...</TitleTemplate>\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <TitleTemplate>Top Rated</TitleTemplate>\n      <ListTemplate>\n        {array.map(movie => (\n          <Card\n            key={movie.id}\n            movieId={movie.id}\n            title={movie.title || movie.name}\n            poster={movie['poster_path']}\n            type=\"movie\"\n            rating={movie['vote_average']}\n            date={movie['release_date']}\n          />\n        ))}\n      </ListTemplate>\n    </div>\n  );\n}\nexport default TopRated;\n","import { useState, useEffect } from 'react';\nimport { getPopular } from 'services/moviesAPI';\nimport Card from 'components/Card/Card';\nimport ListTemplate from 'components/ListTemplate/ListTemplate';\nimport TitleTemplate from 'components/TitleTemplate/TitleTemplate';\nimport Loading from 'components/Loading/Loading';\nimport { toast } from 'react-toastify';\n\nfunction Popular() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [array, setArray] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPopular()\n      .then(({ results }) => {\n        setArray(results);\n      })\n      .catch(err => {\n        setError(true);\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (error) {\n    toast.error('Sorry for the inconvenience! Try again later.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n\n  if (loading) {\n    return (\n      <>\n        <TitleTemplate>Popular list...</TitleTemplate>\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <TitleTemplate>Popular list</TitleTemplate>\n      <ListTemplate>\n        {array.map(movie => (\n          <Card\n            key={movie.id}\n            movieId={movie.id}\n            title={movie.title || movie.name}\n            poster={movie['poster_path']}\n            type=\"movie\"\n            rating={movie['vote_average']}\n            date={movie['release_date']}\n          />\n        ))}\n      </ListTemplate>\n    </div>\n  );\n}\nexport default Popular;\n","import { useState, useEffect } from 'react';\nimport { getNowPlaying } from 'services/moviesAPI';\nimport Card from 'components/Card/Card';\nimport ListTemplate from 'components/ListTemplate/ListTemplate';\nimport TitleTemplate from 'components/TitleTemplate/TitleTemplate';\nimport Loading from 'components/Loading/Loading';\nimport { toast } from 'react-toastify';\n\nfunction NowPlaying() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [array, setArray] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getNowPlaying()\n      .then(({ results }) => {\n        setArray(results);\n      })\n      .catch(err => {\n        setError(true);\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (error) {\n    toast.error('Sorry for the inconvenience! Try again later.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n\n  if (loading) {\n    return (\n      <>\n        <TitleTemplate>Now Playing...</TitleTemplate>\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <TitleTemplate>Now Playing</TitleTemplate>\n      <ListTemplate>\n        {array.map(movie => (\n          <Card\n            key={movie.id}\n            movieId={movie.id}\n            title={movie.title || movie.name}\n            poster={movie['poster_path']}\n            type=\"movie\"\n            rating={movie['vote_average']}\n            date={movie['release_date']}\n          />\n        ))}\n      </ListTemplate>\n    </div>\n  );\n}\nexport default NowPlaying;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  position: relative;\n  padding-bottom: 10px;\n  color: white;\n \n`;\n","import { Title } from './NoFoundedTemplate.styled';\nimport SectionTemplate from 'components/SectionTemplate/SectionTemplate';\n\nfunction NoFoundedTemplate() {\n  return (\n    <SectionTemplate>\n      <Title>Nothing was found for your request.</Title>\n    </SectionTemplate>\n  );\n}\nexport default NoFoundedTemplate;\n","import Card from 'components/Card/Card';\nimport ListTemplate from 'components/ListTemplate/ListTemplate';\nimport TitleTemplate from 'components/TitleTemplate/TitleTemplate';\nimport NoFoundedTemplate from 'components/NoFoundedTemplate/NoFoundedTemplate';\n\nfunction SearchingResults({ array }) {\n  if (array.length === 0) {\n    return (\n      <>\n        {' '}\n        <TitleTemplate>Searching results</TitleTemplate>\n        <NoFoundedTemplate />\n      </>\n    );\n  } else {\n    return (\n      <>\n        <TitleTemplate>Searching results</TitleTemplate>\n        <ListTemplate>\n          {array.map((movie, index) => (\n            <Card\n              key={`${movie.id}-${index}`}\n              movieId={movie.id}\n              title={movie.title || movie.name}\n              poster={movie['poster_path']}\n              type={'movie'}\n              rating={movie['vote_average']}\n              date={movie['release_date']}\n            />\n          ))}\n        </ListTemplate>\n      </>\n    );\n  }\n}\nexport default SearchingResults;\n","import styled from '@emotion/styled';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nexport const Form = styled.form`\n  display: flex;\n  height: 40px;\n  padding-bottom: 20px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  width: 300px;\n  font-size: 18px;\n  color: white;\n  background-color: #2d2b36;\n  border: none;\n  padding: 10px;\n  border-radius: 6px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  outline: none;\n  &::placeholder {\n    color: rgba(100, 100, 100, 1);\n  }\n`;\n\nexport const ButtonSearch = styled.button`\n  background-color: #fe6d31;\n  border: none;\n  cursor: pointer;\n  position: relative;\n  height: 100%;\n  padding: 0;\n  display: inline-block;\n  padding-top: 5px;\n  padding-right: 5px;\n  padding-left: 5px;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n  transition: background-color 0.3s ease;\n  &:hover {\n    background-color: orangered;\n  }\n`;\n\nexport const Icon = styled(BiSearchAlt)`\n  fill: white;\n  padding: 0;\n  width: 90%;\n  height: 90%;\n`;\n\nexport const BtnLoadMore = styled.button`\n  position: relative;\n  background-image: linear-gradient(\n    to right,\n    #485563 0%,\n    #29323c 51%,\n    #485563 100%\n  );\n  padding: 15px 45px;\n  text-align: center;\n  text-transform: uppercase;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  border-radius: 10px;\n  display: block;\n  min-width: 166px;\n  height: 50px;\n  cursor: pointer;\n  margin: 0 auto;\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviesSearch } from 'services/moviesAPI';\nimport { toast } from 'react-toastify';\nimport debounce from 'lodash.debounce';\nimport Loading from 'components/Loading/Loading';\nimport SearchingResults from 'components/SearchingResults/SearchingResults';\nimport TitleTemplate from 'components/TitleTemplate/TitleTemplate';\nimport {\n  Form,\n  Label,\n  Input,\n  ButtonSearch,\n  BtnLoadMore,\n  Icon,\n} from './SearchMovie.styled';\nimport { ThreeDots } from 'react-loader-spinner';\n\nfunction SearchMovie({ onSubmit }) {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loaderLoadMore, setLoaderLoadMore] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  function updateQuery(newQuery) {\n    searchParams.set('query', newQuery);\n    setSearchParams(searchParams);\n  }\n\n  useEffect(() => {\n    if (query.trim() === '') {\n      return;\n    }\n    const debouncedSearch = debounce((query, page) => {\n      if (page === 1) {\n        setLoading(true);\n      }\n      if (page > 1) {\n        setLoaderLoadMore(true);\n      }\n\n      setError(false);\n\n      getMoviesSearch(query, page)\n        .then(({ results }) => {\n          if (page === 1) {\n            setMovies(results);\n          } else {\n            setMovies(prevMovies => [...prevMovies, ...results]);\n          }\n        })\n        .catch(err => {\n          setError(true);\n          console.log(err);\n        })\n        .finally(() => {\n          setLoading(false);\n          setLoaderLoadMore(false);\n        });\n    }, 300);\n    debouncedSearch(query, page);\n    return () => {\n      debouncedSearch.cancel();\n    };\n  }, [query, page]);\n\n  const handleLoadMore = () => {\n    setLoaderLoadMore(true);\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const handleOnSubmit = evt => {\n    evt.preventDefault();\n    if (query.trim() === '') {\n      onSubmit(false);\n      setMovies([]);\n      toast.error('Searching is empty!', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'colored',\n      });\n      return;\n    } else {\n      onSubmit(true);\n    }\n    setPage(1);\n  };\n\n  if (error) {\n    toast.error('Sorry for the inconvenience! Try again later.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n\n  if (loading) {\n    onSubmit(true);\n    return (\n      <>\n        <Form>\n          <Label>\n            <Input\n              type=\"text\"\n              placeholder=\"Enter movie\"\n              value={query}\n              onChange={evt => updateQuery(evt.target.value)}\n            />\n          </Label>\n          <ButtonSearch type=\"submit\" disabled>\n            <Icon />\n          </ButtonSearch>\n        </Form>\n        <TitleTemplate>Searching...</TitleTemplate>\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Form onSubmit={handleOnSubmit}>\n        <Label>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter movie\"\n            value={query}\n            onChange={evt => updateQuery(evt.target.value)}\n          />\n        </Label>\n        <ButtonSearch type=\"submit\">\n          <Icon />\n        </ButtonSearch>\n      </Form>\n\n      {movies.length > 0 ? (\n        <>\n          <SearchingResults array={movies} />\n          {!loaderLoadMore ? (\n            <BtnLoadMore onClick={handleLoadMore}>Load more</BtnLoadMore>\n          ) : (\n            <BtnLoadMore>\n              <ThreeDots\n                height=\"50\"\n                width=\"50\"\n                radius=\"9\"\n                color=\"#fe6d31\"\n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{\n                  justifyContent: 'center',\n                  position: 'absolute',\n                  top: '0',\n                  left: '50%',\n                  transform: 'translateX(-50%)',\n                }}\n                wrapperClassName=\"\"\n                visible={true}\n              />\n            </BtnLoadMore>\n          )}\n        </>\n      ) : null}\n    </>\n  );\n}\n\nexport default SearchMovie;\n","import GenrePanel from 'components/Movies/GenrePanel/GenrePanel';\nimport Trending from 'components/Movies/Trending/Trending';\nimport TopRated from 'components/Movies/TopRated/TopRated';\nimport Popular from 'components/Movies/Popular/Popular';\nimport NowPlaying from 'components/Movies/NowPlaying/NowPlaying';\nimport SearchMovie from 'components/SearchMovie/SearchMovie';\nimport { useState } from 'react';\nimport SectionTemplate from 'components/SectionTemplate/SectionTemplate';\n\nfunction Movies() {\n  const [searchingQuery, setSearchingQuery] = useState(false);\n  return (\n    <>\n      <GenrePanel />\n      <SectionTemplate>\n        <SearchMovie onSubmit={e => setSearchingQuery(e)} />\n        {!searchingQuery ? (\n          <>\n            {' '}\n            <TopRated />\n            <Popular />\n            <NowPlaying />\n            <Trending />\n          </>\n        ) : null}\n      </SectionTemplate>\n    </>\n  );\n}\nexport default Movies;\n"],"names":["API_KEY","axios","MOVIES_API","getTrendingMoviesList","params","api_key","language","result","data","Error","response","message","getGenres","getTopRated","getPopular","getNowPlaying","getMoviesSearch","query","page","GenreList","styled","GenreName","useState","error","setError","loading","setLoading","array","setArray","useEffect","then","genres","catch","err","console","log","finally","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","map","genre","name","id","trendingArray","setTrendingArray","results","TitleTemplate","Loading","ListTemplate","movie","Card","movieId","title","poster","type","rating","date","Title","SectionTemplate","length","index","Form","Label","Input","ButtonSearch","Icon","BiSearchAlt","BtnLoadMore","onSubmit","loaderLoadMore","setLoaderLoadMore","movies","setMovies","setPage","useSearchParams","searchParams","setSearchParams","get","updateQuery","newQuery","set","trim","debouncedSearch","debounce","prevMovies","cancel","placeholder","value","onChange","evt","target","disabled","preventDefault","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","top","left","transform","wrapperClassName","visible","onClick","prevPage","searchingQuery","setSearchingQuery","e"],"sourceRoot":""}