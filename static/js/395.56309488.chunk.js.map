{"version":3,"file":"static/js/395.56309488.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/Movies/GenrePanel/GenrePanel.styled.js","components/Movies/GenrePanel/GenrePanel.jsx","components/SearchMovie/SearchMovie.styled.js","pages/MovieGenres/MovieGenres.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonStyled = styled.button`\n  background-image: linear-gradient(\n    to right,\n    #485563 0%,\n    #29323c 51%,\n    #485563 100%\n  );\n  padding: 15px 45px;\n  text-align: center;\n  text-transform: uppercase;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  /* box-shadow: 0 0 20px #eee; */\n  border-radius: 10px;\n  display: block;\n  cursor: pointer;\n\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n","import { ButtonStyled } from './Button.styled';\n\nfunction Button({ children }) {\n  return <ButtonStyled type=\"button\">{children}</ButtonStyled>;\n}\n\nexport default Button;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GenreList = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  padding: 10px;\n  justify-content: center;\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.2);\n`;\n\nexport const GenreName = styled(Link)`\n  font-size: 12px;\n  color: #8f938f;\n`;\n","import { useState, useEffect } from 'react';\nimport { getGenres } from 'services/moviesAPI';\nimport { GenreList, GenreName } from './GenrePanel.styled';\nimport { toast } from 'react-toastify';\nimport { useLocation } from 'react-router-dom';\n\nfunction GenrePanel() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [array, setArray] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getGenres()\n      .then(({ genres }) => {\n        setArray(genres);\n      })\n      .catch(err => {\n        setError(true);\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (error) {\n    toast.error('Sorry for the inconvenience! Try again later.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n\n  if (loading) {\n    return (\n      <>\n        <p>Loading...</p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <GenreList>\n        {array.map(({ id, name }) => {\n          const randomDate = new Date(\n            +new Date() - Math.floor(Math.random() * 10000000000)\n          );\n          return (\n            <GenreName\n              key={id * randomDate.getTime()}\n              to={`/movies/genres/${id}`}\n              state={{ from: location }}\n            >\n              {name}\n            </GenreName>\n          );\n        })}\n      </GenreList>\n    </>\n  );\n}\nexport default GenrePanel;\n","import styled from '@emotion/styled';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nexport const Form = styled.form`\n  display: flex;\n  height: 40px;\n  padding-bottom: 20px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  width: 300px;\n  font-size: 18px;\n  color: white;\n  background-color: #2d2b36;\n  border: none;\n  padding: 10px;\n  border-radius: 6px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  outline: none;\n  &::placeholder {\n    color: rgba(100, 100, 100, 1);\n  }\n`;\n\nexport const ButtonSearch = styled.button`\n  background-color: #fe6d31;\n  border: none;\n  cursor: pointer;\n  position: relative;\n  height: 100%;\n  padding: 0;\n  display: inline-block;\n  padding-top: 5px;\n  padding-right: 5px;\n  padding-left: 5px;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n  transition: background-color 0.3s ease;\n  &:hover {\n    background-color: orangered;\n  }\n`;\n\nexport const Icon = styled(BiSearchAlt)`\n  fill: white;\n  padding: 0;\n  width: 90%;\n  height: 90%;\n`;\n\nexport const BtnLoadMore = styled.button`\n  position: relative;\n  background-image: linear-gradient(\n    to right,\n    #485563 0%,\n    #29323c 51%,\n    #485563 100%\n  );\n  padding: 15px 45px;\n  text-align: center;\n  text-transform: uppercase;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  border-radius: 10px;\n  display: block;\n  min-width: 166px;\n  height: 50px;\n  cursor: pointer;\n  margin: 0 auto;\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n// import {} from './MovieGenres.styled';\nimport { getMoviesByGenre } from 'services/moviesAPI';\nimport Button from 'components/Button/Button';\nimport { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport SectionTemplate from 'components/SectionTemplate/SectionTemplate';\nimport TitleTemplate from 'components/TitleTemplate/TitleTemplate';\nimport ListTemplate from 'components/ListTemplate/ListTemplate';\nimport Card from 'components/Card/Card';\nimport { BtnLoadMore } from 'components/SearchMovie/SearchMovie.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport GenrePanel from 'components/Movies/GenrePanel/GenrePanel';\nimport { getGenres } from 'services/moviesAPI';\nimport { toast } from 'react-toastify';\nimport { motion } from 'framer-motion';\n// import Loader from 'components/Loader/Loader';\n\nfunction MovieGenres() {\n  const [error, setError] = useState(false);\n  const [movie, setMovie] = useState(null);\n  const [page, setPage] = useState(1);\n  const [prevGenre, setPrevGenre] = useState('');\n  const [array, setArray] = useState([]);\n  const [title, setTitle] = useState('');\n  const { genre } = useParams();\n  const [loaderLoadMore, setLoaderLoadMore] = useState(false);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  if (genre !== prevGenre) {\n    setPage(1);\n    setMovie(null);\n    setPrevGenre(genre);\n  }\n\n  useEffect(() => {\n    if (array.length > 0) {\n      const selectedGenre = array.find(ob => ob.id === parseInt(genre));\n      if (selectedGenre) {\n        setTitle(selectedGenre.name);\n      }\n    }\n  }, [array, genre]);\n\n  useEffect(() => {\n    getGenres()\n      .then(({ genres }) => {\n        setArray(genres);\n      })\n      .catch(err => {\n        setError(true);\n        console.log(err);\n      })\n      .finally(() => {});\n  }, []);\n\n  useEffect(() => {\n    getMoviesByGenre(genre, page)\n      .then(({ results }) => {\n        if (page === 1) {\n          setMovie(results);\n        } else {\n          setMovie(prevMovies => [...prevMovies, ...results]);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setLoaderLoadMore(false);\n      });\n  }, [genre, page]);\n\n  const handleLoadMore = () => {\n    setLoaderLoadMore(true);\n    setPage(prevPage => prevPage + 1);\n  };\n\n  if (!movie) {\n    return;\n  }\n\n  if (error) {\n    toast.error('Sorry for the inconvenience! Try again later.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <GenrePanel />\n      <SectionTemplate>\n        <Link to={backLinkHref.current}>\n          <Button>Go Back</Button>\n        </Link>\n      </SectionTemplate>\n      <SectionTemplate>\n        <TitleTemplate>{title}</TitleTemplate>\n        <ListTemplate>\n          {movie.map((movie, index) => (\n            <Card\n              key={movie.id - index}\n              movieId={movie.id}\n              title={movie.title || movie.name}\n              poster={movie['poster_path']}\n              type={'movie'}\n              rating={movie['vote_average']}\n              date={movie['release_date']}\n            />\n          ))}\n        </ListTemplate>\n        {!loaderLoadMore ? (\n          <BtnLoadMore onClick={handleLoadMore}>Load more</BtnLoadMore>\n        ) : (\n          <BtnLoadMore>\n            <ThreeDots\n              height=\"50\"\n              width=\"50\"\n              radius=\"9\"\n              color=\"#fe6d31\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{\n                justifyContent: 'center',\n                position: 'absolute',\n                top: '0',\n                left: '50%',\n                transform: 'translateX(-50%)',\n              }}\n              wrapperClassName=\"\"\n              visible={true}\n            />\n          </BtnLoadMore>\n        )}\n      </SectionTemplate>\n    </motion.div>\n  );\n}\nexport default MovieGenres;\n","import axios from 'axios';\n\nconst API_KEY = 'c7dd7652c2a2bbf7bac5e128508653f3';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = API_BASE_URL;\n\n// Movie: trending https://api.themoviedb.org/3   /trending/movie/day   ?language=en-US\n// Genres:         https://api.themoviedb.org/3   /genre/movie/list\n// Search by name: https://api.themoviedb.org/3   /search/movie         ?query=iron&include_adult=false&language=en-US&page=1\n// Top Rated:      https://api.themoviedb.org/3   /movie/top_rated\n// Popular:        https://api.themoviedb.org/3   /movie/popular\n// Now Playing:    https://api.themoviedb.org/3   /movie/now_playing\n// movieByGenre    https://api.themoviedb.org/3   /discover/movie       ?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc&with_genres=28\n\nconst MOVIES_API = {\n  trending: '/trending/movie/day',\n  genres: '/genre/movie/list',\n  movieByGenre: '/discover/movie',\n  moviesSearch: '/search/movie',\n  topRated: '/movie/top_rated',\n  popular: '/movie/popular',\n  nowPlaying: '/movie/now_playing',\n};\n\nexport const getTrendingMoviesList = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.trending, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getGenres = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.genres, {\n      params: { api_key: API_KEY },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getTopRated = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.topRated, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getPopular = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.popular, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getNowPlaying = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.nowPlaying, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMoviesSearch = async (query, page) => {\n  try {\n    const result = await axios.get(MOVIES_API.moviesSearch, {\n      params: { query, api_key: API_KEY, language: 'en-US', page },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMoviesByGenre = async (genre, page) => {\n  try {\n    const result = await axios.get(MOVIES_API.movieByGenre, {\n      params: {\n        include_adult: false,\n        api_key: API_KEY,\n        include_video: false,\n        language: 'en-US',\n        page,\n        sort_by: 'popularity.desc',\n        with_genres: genre,\n      },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n"],"names":["ButtonStyled","styled","children","type","GenreList","GenreName","Link","useState","error","setError","loading","setLoading","array","setArray","location","useLocation","useEffect","getGenres","then","genres","catch","err","console","log","finally","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","map","id","name","randomDate","Date","Math","floor","random","to","state","from","getTime","Form","Label","Input","ButtonSearch","Icon","BiSearchAlt","BtnLoadMore","movie","setMovie","page","setPage","prevGenre","setPrevGenre","title","setTitle","genre","useParams","loaderLoadMore","setLoaderLoadMore","backLinkHref","useRef","length","selectedGenre","find","ob","parseInt","getMoviesByGenre","results","prevMovies","initial","opacity","animate","exit","current","index","movieId","poster","rating","date","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","top","left","transform","wrapperClassName","visible","onClick","prevPage","API_KEY","axios","MOVIES_API","getTrendingMoviesList","params","api_key","language","result","data","Error","response","message","getTopRated","getPopular","getNowPlaying","getMoviesSearch","query","include_adult","include_video","sort_by","with_genres"],"sourceRoot":""}