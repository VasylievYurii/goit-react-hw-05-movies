{"version":3,"file":"static/js/402.77a62854.chunk.js","mappings":"kPAIAA,EAAAA,EAAAA,SAAAA,QADqB,+BAQrB,I,QAAMC,EACM,uBAMCC,EAAqB,mCAAG,6GAEZF,EAAAA,EAAAA,IAAUC,EAAqB,CAClDE,OAAQ,CAAEC,QAnBA,mCAmBkBC,SAAU,WAHP,cAE3BC,EAF2B,yBAK1BA,EAAOC,MALmB,sCAO3B,IAAIC,MAAM,KAAMC,SAASF,KAAKG,SAPH,yDAAH,qD,6BCfrBC,GAAcC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,oHAQXE,EAAaF,EAAAA,EAAAA,IAAH,+CAIVG,EAASH,EAAAA,EAAAA,IAAH,wCAINI,EAAQJ,EAAAA,EAAAA,GAAH,2H,SCPlB,I,IAAA,EAVA,YAAuC,IAAlBK,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAC1B,OACE,UAACP,EAAD,YACE,SAACG,EAAD,WACE,SAACC,EAAD,CAAQI,IAAG,wCAAmCD,GAAUE,IAAKH,OAE/D,SAACD,EAAD,UAAQC,MAGb,ECTYI,EAAgBT,EAAAA,EAAAA,GAAH,iSAebU,EAAeV,EAAAA,EAAAA,GAAH,kG,6BCsDzB,MA/DA,WACE,OAA0BW,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KA+BA,OA7BAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GAEXzB,IACG6B,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPH,EAASG,EACV,IACAC,OAAM,SAAAC,GACLT,GAAS,GACTU,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPV,GAAW,EACZ,GACJ,GAAE,IAECH,GACFc,EAAAA,GAAAA,MAAY,gDAAiD,CAC3DC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAIPrB,GAEA,iCACE,SAACsB,EAAA,EAAD,UAAe,yBACf,SAACC,EAAA,EAAD,QAMJ,4BACE,SAAC5B,EAAD,UAAe,sBACf,SAACC,EAAD,UACGM,EAAMsB,KAAI,SAAAC,GACT,OAAKA,EAAK,cAIR,SAAC,EAAD,CAEElC,MAAOkC,EAAMC,KACblC,OAAQiC,EAAK,cAFRA,EAAME,IAJN,EASV,QAIR,E,UCzDD,MAVA,WACE,OACE,+BACE,SAACC,EAAA,EAAD,WACE,SAAC,EAAD,OAIP,C","sources":["services/actorsAPI.js","components/Actors/ActorCard/ActorCard.styled.js","components/Actors/ActorCard/ActorCard.jsx","components/Actors/Trending/Trending.styled.js","components/Actors/Trending/Trending.jsx","pages/Actors.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c7dd7652c2a2bbf7bac5e128508653f3';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = API_BASE_URL;\n\n// People          https://api.themoviedb.org/3   /trending/person/day  ?language=en-US\n// Search by name: https://api.themoviedb.org/3   /search/person        ?query=iron&include_adult=false&language=en-US&page=1\n// Popular         https://api.themoviedb.org/3   /person/popular\n// Details         https://api.themoviedb.org/3   /person/              {person_id}\n\nconst ACTORS_API = {\n  trending: '/trending/person/day',\n  // peopleSearch: '/search/person',\n  // popular: '/person/popular',\n  // person: '/person/',\n};\n\nexport const getTrendingActorsList = async () => {\n  try {\n    const result = await axios.get(ACTORS_API.trending, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\n// export const getPopularActors = async () => {\n//   try {\n//     const result = await axios.get(ACTORS_API.popular, {\n//       params: { api_key: API_KEY, language: 'en-US' },\n//     });\n//     return result.data;\n//   } catch (error) {\n//     throw new Error(error.response.data.message);\n//   }\n// };\n\n// export const getActorSearch = async query => {\n//   try {\n//     const result = await axios.get(ACTORS_API.peopleSearch, {\n//       params: {\n//         query: { query },\n//         api_key: API_KEY,\n//         language: 'en-US',\n//         page: 1,\n//       },\n//     });\n//     return result.data;\n//   } catch (error) {\n//     throw new Error(error.response.data.message);\n//   }\n// };\n\n// export const getActorDetails = async person_id => {\n//   try {\n//     const result = await axios.get(\n//       { person_id },\n//       {\n//         params: { api_key: API_KEY },\n//       }\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw new Error(error.response.data.message);\n//   }\n// };\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const CardWrapper = styled(Link)`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  cursor: auto;\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: white;\n  padding-top: 10px;\n  max-width: 80%;\n`;\n","import { CardWrapper, ImgWrapper, Poster, Title } from './ActorCard.styled';\n\nfunction ActorCard({ title, poster }) {\n  return (\n    <CardWrapper>\n      <ImgWrapper>\n        <Poster src={`http://image.tmdb.org/t/p/w200${poster}`} alt={title} />\n      </ImgWrapper>\n      <Title>{title}</Title>\n    </CardWrapper>\n  );\n}\nexport default ActorCard;\n","import styled from '@emotion/styled';\n\nexport const TrendingTitle = styled.h2`\n  position: relative;\n  padding-bottom: 10px;\n  color: white;\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    height: 2px;\n    width: 100%;\n    background-image: linear-gradient(to right, #2d2b36, transparent);\n  }\n`;\n\nexport const TrendingList = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  padding-top: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { getTrendingActorsList } from 'services/actorsAPI';\nimport ActorCard from '../ActorCard/ActorCard';\nimport { TrendingTitle, TrendingList } from './Trending.styled';\nimport { toast } from 'react-toastify';\nimport Loading from 'components/Loading/Loading';\nimport TitleTemplate from 'components/TitleTemplate/TitleTemplate';\n\nfunction Trending() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [array, setArray] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTrendingActorsList()\n      .then(({ results }) => {\n        setArray(results);\n      })\n      .catch(err => {\n        setError(true);\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (error) {\n    toast.error('Sorry for the inconvenience! Try again later.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n\n  if (loading) {\n    return (\n      <>\n        <TitleTemplate>Trending persons...</TitleTemplate>\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <TrendingTitle>Trending persons</TrendingTitle>\n      <TrendingList>\n        {array.map(actor => {\n          if (!actor['profile_path']) {\n            return [];\n          }\n          return (\n            <ActorCard\n              key={actor.id}\n              title={actor.name}\n              poster={actor['profile_path']}\n            />\n          );\n        })}\n      </TrendingList>\n    </div>\n  );\n}\nexport default Trending;\n","import Trending from 'components/Actors/Trending/Trending';\nimport SectionTemplate from 'components/SectionTemplate/SectionTemplate';\n\nfunction Actors() {\n  return (\n    <>\n      <SectionTemplate>\n        <Trending />\n      </SectionTemplate>\n    </>\n  );\n}\n\nexport default Actors;\n"],"names":["axios","ACTORS_API","getTrendingActorsList","params","api_key","language","result","data","Error","response","message","CardWrapper","styled","Link","ImgWrapper","Poster","Title","title","poster","src","alt","TrendingTitle","TrendingList","useState","error","setError","loading","setLoading","array","setArray","useEffect","then","results","catch","err","console","log","finally","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","TitleTemplate","Loading","map","actor","name","id","SectionTemplate"],"sourceRoot":""}