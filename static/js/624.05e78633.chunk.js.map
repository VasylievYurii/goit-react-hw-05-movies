{"version":3,"file":"static/js/624.05e78633.chunk.js","mappings":"sLAEaA,E,QAAeC,EAAAA,OAAH,se,SCIzB,MAJA,YAA+B,IAAbC,EAAY,EAAZA,SAChB,OAAO,SAACF,EAAD,CAAcG,KAAK,SAAnB,SAA6BD,GACrC,C,8ICFYE,EAAQH,EAAAA,EAAAA,GAAH,4TAeLI,EAAcJ,EAAAA,EAAAA,IAAH,2RAeXK,EAAsBL,EAAAA,EAAAA,IAAH,mKASnBM,EAAWN,EAAAA,EAAAA,EAAH,6CAGRO,EAAOP,EAAAA,EAAAA,KAAH,uDAIJQ,EAAYR,EAAAA,EAAAA,GAAH,iF,iDCoDtB,MAnFA,WAAsB,IAAD,MACnB,GAAoBS,EAAAA,EAAAA,UAAS,MAA7B,eAAOC,EAAP,KAAWC,EAAX,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAapD,IAXAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaT,GACVU,MAAK,SAAAC,GACJZ,EAAMY,EACP,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WAAQ,GACpB,GAAE,CAAChB,IAECF,EAIL,OACE,iCACE,UAACmB,EAAA,EAAD,YACE,SAAC,KAAD,CAAMC,GAAId,EAAae,QAAvB,UACE,SAACC,EAAA,EAAD,UAAQ,eAEV,SAAC7B,EAAD,iBAAQO,QAAR,IAAQA,OAAR,EAAQA,EAAIuB,QACZ,UAAC7B,EAAD,YACE,0BACE,gBACE8B,IAAG,wCAAmCxB,EAAE,aACxCyB,IAAG,OAAEzB,QAAF,IAAEA,OAAF,EAAEA,EAAIuB,UAGb,UAAC5B,EAAD,YACE,0BACE,SAACE,EAAD,UAAM,YAAc,IAAEG,EAAE,iBAE1B,0BACE,SAACH,EAAD,UAAM,oBAAsB,IAAEG,EAAE,mBAElC,0BACE,SAACH,EAAD,UAAM,mBAAqB,IAAEG,EAAE,kBAEjC,0BACE,SAACH,EAAD,UAAM,uBAAyB,IADjC,OACmCG,QADnC,IACmCA,OADnC,EACmCA,EAAI0B,sBAEvC,0BACE,SAAC7B,EAAD,UAAM,wBAA0B,IADlC,OACoCG,QADpC,IACoCA,OADpC,EACoCA,EAAI2B,uBAExC,0BACE,SAAC9B,EAAD,UAAM,aAAe,IAAEG,EAAE,eAAmB,OAG9C,0BACE,SAACH,EAAD,UAAM,YAAc,IADtB,UACwBG,EAAE,OAAW,UADrC,aACwB,EAAiBuB,SAGzC,SAAC3B,EAAD,iBAAWI,QAAX,IAAWA,OAAX,EAAWA,EAAI4B,qBAIrB,UAACT,EAAA,EAAD,YACE,UAACrB,EAAD,YACE,yBACE,SAAC,KAAD,CAAMsB,GAAG,OAAT,UACE,SAACE,EAAA,EAAD,UAAQ,cAGZ,yBACE,SAAC,KAAD,CAAMF,GAAG,UAAT,UACE,SAACE,EAAA,EAAD,UAAQ,oBAId,SAAC,EAAAO,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAKT,C","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","pages/TvDetails/TvDetails.styled.js","pages/TvDetails/TvDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonStyled = styled.button`\n  background-image: linear-gradient(\n    to right,\n    #485563 0%,\n    #29323c 51%,\n    #485563 100%\n  );\n  padding: 15px 45px;\n  text-align: center;\n  text-transform: uppercase;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  /* box-shadow: 0 0 20px #eee; */\n  border-radius: 10px;\n  display: block;\n  cursor: pointer;\n\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n","import { ButtonStyled } from './Button.styled';\n\nfunction Button({ children }) {\n  return <ButtonStyled type=\"button\">{children}</ButtonStyled>;\n}\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  color: #fe6d31;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  position: relative;\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 15px;\n    height: 2px;\n    width: 100%;\n    background-image: linear-gradient(to right, #2d2b36, transparent);\n  }\n`;\nexport const MainWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  position: relative;\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: -20px;\n    height: 2px;\n    width: 100%;\n    background-image: linear-gradient(to right, #2d2b36, transparent);\n  }\n`;\n\nexport const MovieDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  border-radius: 20px;\n  box-shadow: 0px 2px 8px 0px black;\n`;\n\nexport const Overview = styled.p`\n  max-width: 600px;\n`;\nexport const Span = styled.span`\n  color: var(--second-color);\n`;\n\nexport const LinksWrap = styled.ul`\n  display: flex;\n  gap: 20px;\n  padding-bottom: 20px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, Link } from 'react-router-dom';\nimport {\n  Title,\n  MainWrapper,\n  MovieDetailsWrapper,\n  LinksWrap,\n  Overview,\n  Span,\n} from './TvDetails.styled';\nimport Button from 'components/Button/Button';\nimport { getTvDetails } from 'services/tvDetailsAPI';\nimport { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport SectionTemplate from 'components/SectionTemplate/SectionTemplate';\nimport Loader from 'components/Loader/Loader';\n\nfunction TvDetails() {\n  const [tv, setTv] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getTvDetails(movieId)\n      .then(res => {\n        setTv(res);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {});\n  }, [movieId]);\n\n  if (!tv) {\n    return;\n  }\n\n  return (\n    <>\n      <SectionTemplate>\n        <Link to={backLinkHref.current}>\n          <Button>Go Back</Button>\n        </Link>\n        <Title>{tv?.name}</Title>\n        <MainWrapper>\n          <div>\n            <img\n              src={`http://image.tmdb.org/t/p/w300${tv['poster_path']}`}\n              alt={tv?.name}\n            />\n          </div>\n          <MovieDetailsWrapper>\n            <p>\n              <Span>Rating:</Span> {tv['vote_average']}\n            </p>\n            <p>\n              <Span>First air date:</Span> {tv['first_air_date']}\n            </p>\n            <p>\n              <Span>Last air date:</Span> {tv['last_air_date']}\n            </p>\n            <p>\n              <Span>Number of seasons:</Span> {tv?.number_of_seasons}\n            </p>\n            <p>\n              <Span>Number of episodes:</Span> {tv?.number_of_episodes}\n            </p>\n            <p>\n              <Span>Country:</Span> {tv['origin_country'][0]}\n            </p>\n\n            <p>\n              <Span>Genres:</Span> {tv['genres'][0]?.name}\n            </p>\n\n            <Overview>{tv?.overview}</Overview>\n          </MovieDetailsWrapper>\n        </MainWrapper>\n      </SectionTemplate>\n      <SectionTemplate>\n        <LinksWrap>\n          <li>\n            <Link to=\"cast\">\n              <Button>Cast</Button>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">\n              <Button>Reviews</Button>\n            </Link>\n          </li>\n        </LinksWrap>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </SectionTemplate>\n    </>\n  );\n}\nexport default TvDetails;\n"],"names":["ButtonStyled","styled","children","type","Title","MainWrapper","MovieDetailsWrapper","Overview","Span","LinksWrap","useState","tv","setTv","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","getTvDetails","then","res","catch","err","console","log","finally","SectionTemplate","to","current","Button","name","src","alt","number_of_seasons","number_of_episodes","overview","Suspense","fallback","Loader"],"sourceRoot":""}